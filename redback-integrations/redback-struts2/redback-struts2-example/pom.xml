<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2006 The Codehaus.
  ~ 
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~ 
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~ 
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.codehaus.redback</groupId>
    <artifactId>redback-struts2</artifactId>
    <version>1.5-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>redback-struts2-example</artifactId>
  <packaging>war</packaging>
  <name>Redback :: Integration :: Struts 2 Example Webapp</name>
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.redback</groupId>
      <artifactId>redback-struts2-content</artifactId>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.redback</groupId>
      <artifactId>redback-struts2-integration</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.redback</groupId>
      <artifactId>redback-rbac-role-manager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.redback</groupId>
      <artifactId>redback-common-integrations</artifactId>
    </dependency>
    <dependency>
     <groupId>org.codehaus.redback</groupId>
     <artifactId>redback-users-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.redback</groupId>
      <artifactId>redback-rest-services</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-bundle-jaxrs</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.geronimo.specs</groupId>
          <artifactId>geronimo-servlet_3.0_spec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.geronimo.specs</groupId>
          <artifactId>geronimo-javamail_1.4_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/</directory>
              <includes>
                <include>derby.log</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/src/main/webapp</directory>
              <includes>
                <include>META-INF</include>
                <include>images/redback</include>
                <include>css/redback</include>
                <include>template</include>
                <include>WEB-INF/classes</include>
                <include>WEB-INF/lib</include>
                <include>WEB-INF/database</include>
                <include>WEB-INF/logs</include>
                <include>WEB-INF/temp</include>
                <include>WEB-INF/jsp/redback</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <!-- skip example deployement -->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>inplace</goal>
            </goals>
            <configuration>
              <archiveClasses>false</archiveClasses>
              <dependentWarExcludes>WEB-INF/web.xml,WEB-INF/lib/**/*.jar</dependentWarExcludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- 
        here an hack to prevent multiple struts core in classpath
        which prevent struts start 
        and same struts.xml in the classpath too
        -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>cleanup-struts-jar-in-webapp</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <delete includeemptydirs="true">
                  <fileset dir="${basedir}/src/main/webapp/WEB-INF/lib" includes="**/*.jar" />
                </delete>
                <delete includeemptydirs="true">
                  <fileset dir="${basedir}/src/main/webapp/WEB-INF/classes" includes="**/struts.*" />
                </delete>
                <copy overwrite="true" file="${basedir}/src/test/log4j.xml" todir="${basedir}/src/main/webapp/WEB-INF/classes" />
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.11</version>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <contextPath>/</contextPath>
          <jettyEnvXml>src/jetty-env.xml</jettyEnvXml>
          <webAppConfig>
            <contextPath>/</contextPath>
            <jettyEnvXmlFile>src/jetty-env.xml</jettyEnvXmlFile>
          </webAppConfig>
          <systemProperties>                           
            <property>
              <name>appserver.base</name>
              <value>${basedir}/target</value>
            </property>
          </systemProperties>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>9090</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derbyVersion}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <port>9090</port>
          <path>/</path>
          <contextFile>${basedir}/src/test/tomcat/tomcat-context.xml</contextFile>
          <systemProperties>
            <plexus.home>${project.build.directory}/appserver-base</plexus.home>
            <appserver.base>${project.build.directory}/appserver-base</appserver.base>
            <appserver.home>${project.build.directory}/appserver-home</appserver.home>
            <derby.system.home>${project.build.directory}/appserver-base/logs</derby.system.home>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derbyVersion}</version>
          </dependency>
          <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jspc-maven-plugin</artifactId>
        <version>1.4.6</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <warSourceDirectory>${project.build.directory}/${project.build.finalName}/</warSourceDirectory>
          <!--
            Uncomment outputWebXml if you want the generated web.xml to
            be placed in the working directory that the war:war mojo uses.
            -->
          <!--
          <outputWebXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</outputWebXml>
          -->
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>postgres</id>
      <dependencies>
        <dependency>
          <groupId>postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>8.2-504.jdbc3</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <configuration>
              <jettyEnvXml>src/jetty-env-postgres.xml</jettyEnvXml>
            </configuration>
          </plugin>
        </plugins>
      </build>      
    </profile>
    <profile>
      <id>mysql</id>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.0.4</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <configuration>
              <jettyEnvXml>src/jetty-env-mysql.xml</jettyEnvXml>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- profile for dev an log output in the console -->
      <id>dev</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>override-log4j-with-console-output</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <copy overwrite="true" file="${basedir}/src/test/log4j.xml" todir="${basedir}/src/main/webapp/WEB-INF/classes" />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>       
  </profiles>
</project>
